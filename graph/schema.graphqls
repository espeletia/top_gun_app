directive @goField(
	forceResolver: Boolean
	name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

enum GlobalRoles {
  ADMIN
  USER
}

enum TournamentRoles{
  OWNER
  REFEREE
  ADMIN
  ATHELETE
}

type User{
  ID: ID!
  Email: String!
  BornIn: Int!
  UserName: String!
  FirstName: String
  LastName: String
  ParticipatingTournamentsIDs: [ID!]!
  ParticipatingTournaments: [Tournament!]!
  LikedTournamentsIDs: [ID!]!
  LikedTournaments: [Tournament!]!
  FollowingUserIDs: [ID!]!
  Following: [User!]!
  FollowersUserIDs: [ID!]!
  Followers: [User!]!
}

type Tournament{
  ID: ID!
  OwnerID: ID!
  RefereeIDs: ID!
  Referees: [User!]!
  AthleteIDs: ID!
  Athletes: [User!]!
}

type PooleMatch{
  ID: ID!
  LeftAthleteID: ID!
  LeftAthlete: User!
  RightAthlete: ID!
  RightAthlete: User!
  RefereeID: ID!
  Referee: User!
  RightScore: int!
  LeftScore: int!
}

type Poole{
  ID: ID!
  TournamentID: ID!
  RefereeID: ID!
  Referee: [User!]!
  AthleteIDs: ID!
  Athletes: [User!]!
}

type Query {
  # Match queries
  getAllMatches(TournamentId: ID!): [Match!]!

  # Tournament queries
  getAllTournaments: [Tournament!]!

  # User queries
  getAllUsers: [User!]!
}